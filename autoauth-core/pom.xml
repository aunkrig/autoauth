<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.unkrig.autoauth</groupId>
  <artifactId>autoauth-core</artifactId>
  <version>0.1.3</version>

  <name>AUTOAUTH</name>
  <description>An HTTP proxy that handles HTTP proxy authentication over another HTTP proxy.</description>
  <url>https://github.com/aunkrig/autoauth/</url>
  <scm>
  	<url>https://github.com/aunkrig/autoauth</url>
  </scm>
  <licenses>
    <license>
      <name>BSD 3-Clause License</name>
      <url>https://github.com/aunkrig/autoauth/blob/master/LICENSE</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <name>Arno Unkrig</name>
      <url>https://unkrig.de</url>
    </developer>
  </developers>

  <dependencies>
  	<dependency>
  		<groupId>de.unkrig.commons</groupId>
  		<artifactId>commons-net</artifactId>
  		<version>1.2.16</version>
  	</dependency>
  	<dependency>
  		<groupId>junit</groupId>
  		<artifactId>junit</artifactId>
  		<version>4.12</version>
  		<scope>test</scope>
  	</dependency>
  </dependencies>

  <properties>
  	<maven.compiler.source>1.8</maven.compiler.source>
  	<maven.compiler.target>1.8</maven.compiler.target>
  	<jar-with-dependencies.mainClass>de.unkrig.autoauth.core.Main</jar-with-dependencies.mainClass>
  	<jar-with-dependencies.mainClass2>de/unkrig/autoauth/core/Main</jar-with-dependencies.mainClass2>
  	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <build>
    <plugins>

      <!-- Compile .java to .jar. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.6.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <!-- Generate executable .jar file ("*-jar-with-dependencies.jar"). -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <archive>
            <manifest>
              <mainClass>${jar-with-dependencies.mainClass}</mainClass>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <id>make-jar-with-dependencies</id>
            <phase>package</phase>
            <goals><goal>single</goal></goals>
          </execution>
        </executions>
        </plugin>

        <!-- Generate MS WINDOWS executable from executable .jar file. -->
        <plugin>
          <groupId>com.akathist.maven.plugins.launch4j</groupId>
          <artifactId>launch4j-maven-plugin</artifactId>
          <version>1.7.12</version>
          <executions>
            <execution>
              <id>attach-windows-exe</id>

              <goals><goal>launch4j</goal></goals>

              <configuration>
                <headerType>console</headerType>
                <icon>autoauth.ico</icon>
                <outfile>target/${project.artifactId}-${project.version}.exe</outfile>
                <jar>target/${project.artifactId}-${project.version}-jar-with-dependencies.jar</jar>
                <errTitle>${project.name}</errTitle>
                <classPath>
                  <addDependencies>false</addDependencies>
                  <mainClass>${jar-with-dependencies.mainClass}</mainClass>
                </classPath>
                <jre><minVersion>1.8.0</minVersion></jre>
                <versionInfo>
                  <fileVersion>0.0.0.0</fileVersion>
                  <txtFileVersion>${project.version}</txtFileVersion>
                  <fileDescription>${project.artifactId}</fileDescription>
                  <copyright>Copyright Arno Unkrig 2018-2019. All rights reserved.</copyright>
                  <productVersion>0.0.0.0</productVersion>
                  <txtProductVersion>${project.version}</txtProductVersion>
                  <productName>${project.name}</productName>
                  <internalName>${project.name}</internalName>
                  <originalFilename>${project.artifactId}-${project.version}.exe</originalFilename>
                  <languageIndex>0x0409</languageIndex>
                </versionInfo>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Attaches the MS WINDOWS executable artifact (so that it is INSTALLed and DEPLOYed). -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.12</version>
          <executions>
            <execution>
              <id>attach-artifacts</id>
              <phase>package</phase>
              <goals><goal>attach-artifact</goal></goals>
              <configuration>
                <artifacts>
                  <artifact>
                    <file>target/${project.artifactId}-${project.version}.exe</file>
                    <type>exe</type>
                  </artifact>
                </artifacts>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!--
          Creates a JAR file containing the API documentation (javadoc) and an HTML help document for the
          command line tool (MAINDOC).
        -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.10.4</version>
          <executions>

            <!-- Generate the API docs. -->
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>

              <configuration>
                <header>${project.name} ${project.version}</header>
                <footer>${project.name} ${project.version}</footer>
                <javadocVersion>1.8</javadocVersion>
                <additionalparam>-Xdoclint:none</additionalparam>
                <quiet>true</quiet>
                <tags>
                  <tag><name>main.commandLineOptions</name>    <placement>X</placement>                          </tag>
                  <tag><name>main.commandLineOptionGroup</name><placement>a</placement><head>Option group:</head></tag>
                </tags>
              </configuration>
            </execution>

             <!-- Generate the command-line help doc. -->
             <execution>

               <id>make-maindoc</id>
               <phase>compile</phase>
               <goals><goal>javadoc</goal></goals>

               <configuration>
                 <useStandardDocletOptions>false</useStandardDocletOptions>
                 <additionalparam>-Xdoclint:none</additionalparam>

                 <quiet>true</quiet>

                 <doclet>de.unkrig.doclet.main.MainDoclet</doclet>
                 <docletArtifact>
                   <groupId>de.unkrig</groupId>
                   <artifactId>doclet-main</artifactId>
                   <version>1.0.5</version>
                 </docletArtifact>

                 <additionalparam>
                   -charset     UTF-8
                   -docencoding UTF-8
                 </additionalparam>

                 <destDir>../../classes</destDir> <!-- relative to "target/site/apidocs" -->
               </configuration>
             </execution>
           </executions>
        </plugin>

        <!--
          Converts the an HTML help document into TXT format and stores it in "target/classes", so that
          "-help" can print it.
        -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.5.0</version>

          <dependencies>
            <dependency>
              <groupId>de.unkrig</groupId>
              <artifactId>html2txt</artifactId>
              <version>1.0.2</version>
            </dependency>
          </dependencies>

          <executions>
            <execution>
              <id>html2txt-maindoc</id>
              <phase>compile</phase>
              <goals><goal>java</goal></goals>
              <configuration>
                <includePluginDependencies>true</includePluginDependencies>
                <mainClass>de.unkrig.html2txt.Main</mainClass>
                <arguments>
                  <argument>${basedir}/target/classes/${jar-with-dependencies.mainClass2}.main(String[]).html</argument>
                  <argument>${basedir}/target/classes/${jar-with-dependencies.mainClass2}.main(String[]).txt</argument>
                </arguments>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Creates and attaches a JAR file containing the sources. -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.4</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals><goal>jar</goal></goals>
            </execution>
          </executions>
        </plugin>

        <!-- Stages (uploads) the artifact to oss.sonatype.org. -->
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>1.6.7</version>
          <extensions>true</extensions>
          <configuration>
            <serverId>ossrh</serverId>
            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
            <autoReleaseAfterClose>true</autoReleaseAfterClose>
          </configuration>
        </plugin>
      </plugins>
  </build>


  <profiles>

<!--
  oss.sonatype.org requires that all artifacts are signed with GPG.
  To enable signing with GPG, modify your "settings.xml" like this:

    <settings>
  ...
      <profiles>
  ...
        <profile>
          <id>have_gpg</id>
          <properties>
            <gpg.executable>c:\gpg.exe</gpg.executable>
            <gpg.useAgent>false</gpg.useAgent>
            <gpg.keyname>me@home.com</gpg.keyname>
            <gpg.passphrase>xxx</gpg.passphrase>
          </properties>
        </profile>
      </profiles>
  ...
      <activeProfiles>
  ...
        <activeProfile>have_gpg</activeProfile>
      </activeProfiles>
  ...
    </settings>
-->
    <profile>
      <id>have_gpg</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.5</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals><goal>sign</goal></goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <organization>
  	<name>Arno Unkrig</name>
  	<url>https://github.com/aunkrig/autoauth</url>
  </organization>
</project>
